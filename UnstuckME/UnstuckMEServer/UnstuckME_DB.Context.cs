//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnstuckMEInterfaces
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class UnstuckME_DBEntities : DbContext
    {
        public UnstuckME_DBEntities()
            : base("name=UnstuckME_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Chat> Chats { get; set; }
        public DbSet<Class> Classes { get; set; }
        public DbSet<File> Files { get; set; }
        public DbSet<Message> Messages { get; set; }
        public DbSet<OfficialMentor> OfficialMentors { get; set; }
        public DbSet<Picture> Pictures { get; set; }
        public DbSet<Report> Reports { get; set; }
        public DbSet<Review> Reviews { get; set; }
        public DbSet<Server> Servers { get; set; }
        public DbSet<Sticker> Stickers { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<UserProfile> UserProfiles { get; set; }
        public DbSet<AllMentorPrograms_View> AllMentorPrograms_View { get; set; }
        public DbSet<AllStickers_View> AllStickers_View { get; set; }
        public DbSet<AllUsers_View> AllUsers_View { get; set; }
    
        public virtual ObjectResult<AdminPullAllReports_Result> AdminPullAllReports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminPullAllReports_Result>("AdminPullAllReports");
        }
    
        public virtual ObjectResult<AdminPullReportsForUser_Result> AdminPullReportsForUser(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminPullReportsForUser_Result>("AdminPullReportsForUser", userParameter);
        }
    
        public virtual int ChangeProfilePicture(Nullable<int> userID, byte[] photo)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeProfilePicture", userIDParameter, photoParameter);
        }
    
        public virtual int ClearReviewDescriptionByReviewID(Nullable<int> reviewID)
        {
            var reviewIDParameter = reviewID.HasValue ?
                new ObjectParameter("ReviewID", reviewID) :
                new ObjectParameter("ReviewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClearReviewDescriptionByReviewID", reviewIDParameter);
        }
    
        public virtual int CreateChat(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateChat", userIDParameter);
        }
    
        public virtual int CreateNewClass(string courseName, string courseCode, Nullable<short> courseNumber, Nullable<byte> termOffered)
        {
            var courseNameParameter = courseName != null ?
                new ObjectParameter("CourseName", courseName) :
                new ObjectParameter("CourseName", typeof(string));
    
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var courseNumberParameter = courseNumber.HasValue ?
                new ObjectParameter("CourseNumber", courseNumber) :
                new ObjectParameter("CourseNumber", typeof(short));
    
            var termOfferedParameter = termOffered.HasValue ?
                new ObjectParameter("TermOffered", termOffered) :
                new ObjectParameter("TermOffered", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateNewClass", courseNameParameter, courseCodeParameter, courseNumberParameter, termOfferedParameter);
        }
    
        public virtual int CreateNewUser(string firstName, string lastName, string emailAddress, string password, string privileges)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var privilegesParameter = privileges != null ?
                new ObjectParameter("Privileges", privileges) :
                new ObjectParameter("Privileges", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateNewUser", firstNameParameter, lastNameParameter, emailAddressParameter, passwordParameter, privilegesParameter);
        }
    
        public virtual int CreateOfficialMentor(string organizationName)
        {
            var organizationNameParameter = organizationName != null ?
                new ObjectParameter("OrganizationName", organizationName) :
                new ObjectParameter("OrganizationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOfficialMentor", organizationNameParameter);
        }
    
        public virtual int CreateReport(string reportDescription, Nullable<int> flaggerID, Nullable<double> reviewID)
        {
            var reportDescriptionParameter = reportDescription != null ?
                new ObjectParameter("ReportDescription", reportDescription) :
                new ObjectParameter("ReportDescription", typeof(string));
    
            var flaggerIDParameter = flaggerID.HasValue ?
                new ObjectParameter("FlaggerID", flaggerID) :
                new ObjectParameter("FlaggerID", typeof(int));
    
            var reviewIDParameter = reviewID.HasValue ?
                new ObjectParameter("ReviewID", reviewID) :
                new ObjectParameter("ReviewID", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateReport", reportDescriptionParameter, flaggerIDParameter, reviewIDParameter);
        }
    
        public virtual int CreateReview(Nullable<int> stickerID, Nullable<int> reviewerID, Nullable<double> starRanking, string description)
        {
            var stickerIDParameter = stickerID.HasValue ?
                new ObjectParameter("StickerID", stickerID) :
                new ObjectParameter("StickerID", typeof(int));
    
            var reviewerIDParameter = reviewerID.HasValue ?
                new ObjectParameter("ReviewerID", reviewerID) :
                new ObjectParameter("ReviewerID", typeof(int));
    
            var starRankingParameter = starRanking.HasValue ?
                new ObjectParameter("StarRanking", starRanking) :
                new ObjectParameter("StarRanking", typeof(double));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateReview", stickerIDParameter, reviewerIDParameter, starRankingParameter, descriptionParameter);
        }
    
        public virtual int CreateServer(string serverName, string serverIP, string serverDomain, string schoolName, string adminUsername, string adminPassword, string emailCredentials)
        {
            var serverNameParameter = serverName != null ?
                new ObjectParameter("ServerName", serverName) :
                new ObjectParameter("ServerName", typeof(string));
    
            var serverIPParameter = serverIP != null ?
                new ObjectParameter("ServerIP", serverIP) :
                new ObjectParameter("ServerIP", typeof(string));
    
            var serverDomainParameter = serverDomain != null ?
                new ObjectParameter("ServerDomain", serverDomain) :
                new ObjectParameter("ServerDomain", typeof(string));
    
            var schoolNameParameter = schoolName != null ?
                new ObjectParameter("SchoolName", schoolName) :
                new ObjectParameter("SchoolName", typeof(string));
    
            var adminUsernameParameter = adminUsername != null ?
                new ObjectParameter("AdminUsername", adminUsername) :
                new ObjectParameter("AdminUsername", typeof(string));
    
            var adminPasswordParameter = adminPassword != null ?
                new ObjectParameter("AdminPassword", adminPassword) :
                new ObjectParameter("AdminPassword", typeof(string));
    
            var emailCredentialsParameter = emailCredentials != null ?
                new ObjectParameter("EmailCredentials", emailCredentials) :
                new ObjectParameter("EmailCredentials", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateServer", serverNameParameter, serverIPParameter, serverDomainParameter, schoolNameParameter, adminUsernameParameter, adminPasswordParameter, emailCredentialsParameter);
        }
    
        public virtual int CreateSticker(string problemDescription, Nullable<int> classID, Nullable<int> studentID, Nullable<double> minimumStarRanking, Nullable<int> timeout)
        {
            var problemDescriptionParameter = problemDescription != null ?
                new ObjectParameter("ProblemDescription", problemDescription) :
                new ObjectParameter("ProblemDescription", typeof(string));
    
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            var minimumStarRankingParameter = minimumStarRanking.HasValue ?
                new ObjectParameter("MinimumStarRanking", minimumStarRanking) :
                new ObjectParameter("MinimumStarRanking", typeof(double));
    
            var timeoutParameter = timeout.HasValue ?
                new ObjectParameter("Timeout", timeout) :
                new ObjectParameter("Timeout", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateSticker", problemDescriptionParameter, classIDParameter, studentIDParameter, minimumStarRankingParameter, timeoutParameter);
        }
    
        public virtual int DeleteClassByClassID(Nullable<int> classID)
        {
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteClassByClassID", classIDParameter);
        }
    
        public virtual int DeleteFileByFileID(Nullable<int> fileID)
        {
            var fileIDParameter = fileID.HasValue ?
                new ObjectParameter("FileID", fileID) :
                new ObjectParameter("FileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFileByFileID", fileIDParameter);
        }
    
        public virtual int DeleteMentorOrganizationByMentorID(Nullable<int> mentorID)
        {
            var mentorIDParameter = mentorID.HasValue ?
                new ObjectParameter("MentorID", mentorID) :
                new ObjectParameter("MentorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMentorOrganizationByMentorID", mentorIDParameter);
        }
    
        public virtual int DeleteMessageByMessageID(Nullable<int> messageID)
        {
            var messageIDParameter = messageID.HasValue ?
                new ObjectParameter("MessageID", messageID) :
                new ObjectParameter("MessageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMessageByMessageID", messageIDParameter);
        }
    
        public virtual int DeleteReportByReportID(Nullable<int> reportID)
        {
            var reportIDParameter = reportID.HasValue ?
                new ObjectParameter("ReportID", reportID) :
                new ObjectParameter("ReportID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReportByReportID", reportIDParameter);
        }
    
        public virtual int DeleteServerInformation(Nullable<int> serverID)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteServerInformation", serverIDParameter);
        }
    
        public virtual int DeleteServerInformationByServerID(Nullable<int> serverID)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteServerInformationByServerID", serverIDParameter);
        }
    
        public virtual int DeleteUserPictureByUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserPictureByUserID", userIDParameter);
        }
    
        public virtual int DeleteUserProfileByUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserProfileByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<FilterUserReviewsByEqualStarRank_Result> FilterUserReviewsByEqualStarRank(Nullable<double> starfilter, string displayname)
        {
            var starfilterParameter = starfilter.HasValue ?
                new ObjectParameter("starfilter", starfilter) :
                new ObjectParameter("starfilter", typeof(double));
    
            var displaynameParameter = displayname != null ?
                new ObjectParameter("displayname", displayname) :
                new ObjectParameter("displayname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FilterUserReviewsByEqualStarRank_Result>("FilterUserReviewsByEqualStarRank", starfilterParameter, displaynameParameter);
        }
    
        public virtual ObjectResult<FilterUserReviewsByGreaterThanStarRank_Result> FilterUserReviewsByGreaterThanStarRank(Nullable<double> starfilter, string displayname)
        {
            var starfilterParameter = starfilter.HasValue ?
                new ObjectParameter("starfilter", starfilter) :
                new ObjectParameter("starfilter", typeof(double));
    
            var displaynameParameter = displayname != null ?
                new ObjectParameter("displayname", displayname) :
                new ObjectParameter("displayname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FilterUserReviewsByGreaterThanStarRank_Result>("FilterUserReviewsByGreaterThanStarRank", starfilterParameter, displaynameParameter);
        }
    
        public virtual ObjectResult<GetActiveStickersWithStarRankOrMentorOrganization_Result> GetActiveStickersWithStarRankOrMentorOrganization(Nullable<double> starrank, string displayname, string organization)
        {
            var starrankParameter = starrank.HasValue ?
                new ObjectParameter("starrank", starrank) :
                new ObjectParameter("starrank", typeof(double));
    
            var displaynameParameter = displayname != null ?
                new ObjectParameter("displayname", displayname) :
                new ObjectParameter("displayname", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("organization", organization) :
                new ObjectParameter("organization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActiveStickersWithStarRankOrMentorOrganization_Result>("GetActiveStickersWithStarRankOrMentorOrganization", starrankParameter, displaynameParameter, organizationParameter);
        }
    
        public virtual ObjectResult<GetAdminInfo_Result> GetAdminInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdminInfo_Result>("GetAdminInfo");
        }
    
        public virtual ObjectResult<GetAllActiveStickers_Result> GetAllActiveStickers(string displayname)
        {
            var displaynameParameter = displayname != null ?
                new ObjectParameter("displayname", displayname) :
                new ObjectParameter("displayname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllActiveStickers_Result>("GetAllActiveStickers", displaynameParameter);
        }
    
        public virtual ObjectResult<GetAllChatIDsAUserIsPartOF_Result> GetAllChatIDsAUserIsPartOF(string displayname)
        {
            var displaynameParameter = displayname != null ?
                new ObjectParameter("displayname", displayname) :
                new ObjectParameter("displayname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllChatIDsAUserIsPartOF_Result>("GetAllChatIDsAUserIsPartOF", displaynameParameter);
        }
    
        public virtual ObjectResult<string> GetAllOrganizations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAllOrganizations");
        }
    
        public virtual ObjectResult<GetAllResolvedStickers_Result> GetAllResolvedStickers(string displayname)
        {
            var displaynameParameter = displayname != null ?
                new ObjectParameter("displayname", displayname) :
                new ObjectParameter("displayname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllResolvedStickers_Result>("GetAllResolvedStickers", displaynameParameter);
        }
    
        public virtual ObjectResult<GetAllStickers_Result> GetAllStickers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStickers_Result>("GetAllStickers");
        }
    
        public virtual ObjectResult<GetAllStudentReviews_Result> GetAllStudentReviews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStudentReviews_Result>("GetAllStudentReviews");
        }
    
        public virtual ObjectResult<GetAllTutorReviews_Result> GetAllTutorReviews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTutorReviews_Result>("GetAllTutorReviews");
        }
    
        public virtual ObjectResult<GetDisplayNameAndEmail_Result> GetDisplayNameAndEmail(string useremail, string password)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDisplayNameAndEmail_Result>("GetDisplayNameAndEmail", useremailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> GetEmailCredentials()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEmailCredentials");
        }
    
        public virtual ObjectResult<byte[]> GetProfilePicture(string useremail)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("GetProfilePicture", useremailParameter);
        }
    
        public virtual ObjectResult<string> GetSchoolName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSchoolName");
        }
    
        public virtual ObjectResult<string> GetServerDomain()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetServerDomain");
        }
    
        public virtual ObjectResult<string> GetServerIP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetServerIP");
        }
    
        public virtual ObjectResult<string> GetServerName()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetServerName");
        }
    
        public virtual ObjectResult<Nullable<double>> GetUserAvgStudentStarRank(string displayname)
        {
            var displaynameParameter = displayname != null ?
                new ObjectParameter("displayname", displayname) :
                new ObjectParameter("displayname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GetUserAvgStudentStarRank", displaynameParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> GetUserAvgTutorStarRank(string displayname)
        {
            var displaynameParameter = displayname != null ?
                new ObjectParameter("displayname", displayname) :
                new ObjectParameter("displayname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("GetUserAvgTutorStarRank", displaynameParameter);
        }
    
        public virtual ObjectResult<GetUserClasses_Result> GetUserClasses(string useremail, string password)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserClasses_Result>("GetUserClasses", useremailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> GetUserOrganizations(string useremail, string password)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUserOrganizations", useremailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GetUserStickersAndReviews_Result> GetUserStickersAndReviews(string useremail, string password)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserStickersAndReviews_Result>("GetUserStickersAndReviews", useremailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GetUsersWithOverallStarRank_Result> GetUsersWithOverallStarRank(Nullable<double> starrank)
        {
            var starrankParameter = starrank.HasValue ?
                new ObjectParameter("starrank", starrank) :
                new ObjectParameter("starrank", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersWithOverallStarRank_Result>("GetUsersWithOverallStarRank", starrankParameter);
        }
    
        public virtual int InsertFile(Nullable<int> chatID, byte[] fileData, Nullable<int> userID)
        {
            var chatIDParameter = chatID.HasValue ?
                new ObjectParameter("ChatID", chatID) :
                new ObjectParameter("ChatID", typeof(int));
    
            var fileDataParameter = fileData != null ?
                new ObjectParameter("FileData", fileData) :
                new ObjectParameter("FileData", typeof(byte[]));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertFile", chatIDParameter, fileDataParameter, userIDParameter);
        }
    
        public virtual int InsertMessage(Nullable<int> chatID, string message, Nullable<int> userID)
        {
            var chatIDParameter = chatID.HasValue ?
                new ObjectParameter("ChatID", chatID) :
                new ObjectParameter("ChatID", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMessage", chatIDParameter, messageParameter, userIDParameter);
        }
    
        public virtual int InsertStudentIntoClass(Nullable<int> userID, Nullable<int> classID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertStudentIntoClass", userIDParameter, classIDParameter);
        }
    
        public virtual int InsertUserIntoChat(Nullable<int> userID, Nullable<int> chatID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var chatIDParameter = chatID.HasValue ?
                new ObjectParameter("ChatID", chatID) :
                new ObjectParameter("ChatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUserIntoChat", userIDParameter, chatIDParameter);
        }
    
        public virtual int InsertUserIntoMentorProgram(Nullable<int> userID, Nullable<int> mentorID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var mentorIDParameter = mentorID.HasValue ?
                new ObjectParameter("MentorID", mentorID) :
                new ObjectParameter("MentorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUserIntoMentorProgram", userIDParameter, mentorIDParameter);
        }
    
        public virtual ObjectResult<byte[]> OpenProfilePage(string useremail, string password)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("OpenProfilePage", useremailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<PullActiveClassSpecificStickers_Result> PullActiveClassSpecificStickers(string name, string code, Nullable<short> number, Nullable<byte> term, string displayname)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(short));
    
            var termParameter = term.HasValue ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(byte));
    
            var displaynameParameter = displayname != null ?
                new ObjectParameter("displayname", displayname) :
                new ObjectParameter("displayname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PullActiveClassSpecificStickers_Result>("PullActiveClassSpecificStickers", nameParameter, codeParameter, numberParameter, termParameter, displaynameParameter);
        }
    
        public virtual ObjectResult<PullChatMessagesAndFilesBetweenUsers_Result> PullChatMessagesAndFilesBetweenUsers(string user, string tutor)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var tutorParameter = tutor != null ?
                new ObjectParameter("tutor", tutor) :
                new ObjectParameter("tutor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PullChatMessagesAndFilesBetweenUsers_Result>("PullChatMessagesAndFilesBetweenUsers", userParameter, tutorParameter);
        }
    
        public virtual ObjectResult<string> RetrieveLogin(string useremail)
        {
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RetrieveLogin", useremailParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateAdminPasswordByServerID(Nullable<int> serverID, string adminPassword)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            var adminPasswordParameter = adminPassword != null ?
                new ObjectParameter("AdminPassword", adminPassword) :
                new ObjectParameter("AdminPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAdminPasswordByServerID", serverIDParameter, adminPasswordParameter);
        }
    
        public virtual int UpdateAdminUsernameByServerID(Nullable<int> serverID, string adminUsername)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            var adminUsernameParameter = adminUsername != null ?
                new ObjectParameter("AdminUsername", adminUsername) :
                new ObjectParameter("AdminUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAdminUsernameByServerID", serverIDParameter, adminUsernameParameter);
        }
    
        public virtual int UpdateCourseCodeByClassID(Nullable<int> classID, string courseCode)
        {
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCourseCodeByClassID", classIDParameter, courseCodeParameter);
        }
    
        public virtual int UpdateCourseNameByClassID(Nullable<int> classID, string courseName)
        {
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            var courseNameParameter = courseName != null ?
                new ObjectParameter("CourseName", courseName) :
                new ObjectParameter("CourseName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCourseNameByClassID", classIDParameter, courseNameParameter);
        }
    
        public virtual int UpdateCourseNumberByClassID(Nullable<int> classID, Nullable<short> courseNumber)
        {
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            var courseNumberParameter = courseNumber.HasValue ?
                new ObjectParameter("CourseNumber", courseNumber) :
                new ObjectParameter("CourseNumber", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCourseNumberByClassID", classIDParameter, courseNumberParameter);
        }
    
        public virtual int UpdateDisplayFNameByUserID(Nullable<int> userID, string displayFName)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var displayFNameParameter = displayFName != null ?
                new ObjectParameter("DisplayFName", displayFName) :
                new ObjectParameter("DisplayFName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDisplayFNameByUserID", userIDParameter, displayFNameParameter);
        }
    
        public virtual int UpdateDisplayLNameByUserID(Nullable<int> userID, string displayLName)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var displayLNameParameter = displayLName != null ?
                new ObjectParameter("DisplayLName", displayLName) :
                new ObjectParameter("DisplayLName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDisplayLNameByUserID", userIDParameter, displayLNameParameter);
        }
    
        public virtual int UpdateEmailAddressByUserID(Nullable<int> userID, string emailAddress)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmailAddressByUserID", userIDParameter, emailAddressParameter);
        }
    
        public virtual int UpdateEmailCredentialsByServerID(Nullable<int> serverID, string emailCredentials)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            var emailCredentialsParameter = emailCredentials != null ?
                new ObjectParameter("EmailCredentials", emailCredentials) :
                new ObjectParameter("EmailCredentials", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmailCredentialsByServerID", serverIDParameter, emailCredentialsParameter);
        }
    
        public virtual int UpdateMentorNameByMentorID(Nullable<int> mentorID, string organizationName)
        {
            var mentorIDParameter = mentorID.HasValue ?
                new ObjectParameter("MentorID", mentorID) :
                new ObjectParameter("MentorID", typeof(int));
    
            var organizationNameParameter = organizationName != null ?
                new ObjectParameter("OrganizationName", organizationName) :
                new ObjectParameter("OrganizationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMentorNameByMentorID", mentorIDParameter, organizationNameParameter);
        }
    
        public virtual int UpdateMessageByMessageID(Nullable<int> messageID, string messageData)
        {
            var messageIDParameter = messageID.HasValue ?
                new ObjectParameter("MessageID", messageID) :
                new ObjectParameter("MessageID", typeof(int));
    
            var messageDataParameter = messageData != null ?
                new ObjectParameter("MessageData", messageData) :
                new ObjectParameter("MessageData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMessageByMessageID", messageIDParameter, messageDataParameter);
        }
    
        public virtual int UpdatePrivilegesByUserID(Nullable<int> userID, byte[] privileges)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var privilegesParameter = privileges != null ?
                new ObjectParameter("Privileges", privileges) :
                new ObjectParameter("Privileges", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePrivilegesByUserID", userIDParameter, privilegesParameter);
        }
    
        public virtual int UpdateReviewDescriptionByReviewID(Nullable<int> reviewID, string description)
        {
            var reviewIDParameter = reviewID.HasValue ?
                new ObjectParameter("ReviewID", reviewID) :
                new ObjectParameter("ReviewID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReviewDescriptionByReviewID", reviewIDParameter, descriptionParameter);
        }
    
        public virtual int UpdateSchoolNameByServerID(Nullable<int> serverID, string schoolName)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            var schoolNameParameter = schoolName != null ?
                new ObjectParameter("SchoolName", schoolName) :
                new ObjectParameter("SchoolName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSchoolNameByServerID", serverIDParameter, schoolNameParameter);
        }
    
        public virtual int UpdateServerDomainByServerID(Nullable<int> serverID, string serverDomain)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            var serverDomainParameter = serverDomain != null ?
                new ObjectParameter("ServerDomain", serverDomain) :
                new ObjectParameter("ServerDomain", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServerDomainByServerID", serverIDParameter, serverDomainParameter);
        }
    
        public virtual int UpdateServerIPByServerID(Nullable<int> serverID, string serverIP)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            var serverIPParameter = serverIP != null ?
                new ObjectParameter("ServerIP", serverIP) :
                new ObjectParameter("ServerIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServerIPByServerID", serverIDParameter, serverIPParameter);
        }
    
        public virtual int UpdateServerNameByServerID(Nullable<int> serverID, string serverName)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            var serverNameParameter = serverName != null ?
                new ObjectParameter("ServerName", serverName) :
                new ObjectParameter("ServerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServerNameByServerID", serverIDParameter, serverNameParameter);
        }
    
        public virtual int UpdateStarRankingByReviewID(Nullable<int> reviewID, Nullable<byte> starRanking)
        {
            var reviewIDParameter = reviewID.HasValue ?
                new ObjectParameter("ReviewID", reviewID) :
                new ObjectParameter("ReviewID", typeof(int));
    
            var starRankingParameter = starRanking.HasValue ?
                new ObjectParameter("StarRanking", starRanking) :
                new ObjectParameter("StarRanking", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStarRankingByReviewID", reviewIDParameter, starRankingParameter);
        }
    
        public virtual int UpdateStickerProblemDescriptionByStickerID(Nullable<int> stickerID, string problemDescription)
        {
            var stickerIDParameter = stickerID.HasValue ?
                new ObjectParameter("StickerID", stickerID) :
                new ObjectParameter("StickerID", typeof(int));
    
            var problemDescriptionParameter = problemDescription != null ?
                new ObjectParameter("ProblemDescription", problemDescription) :
                new ObjectParameter("ProblemDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStickerProblemDescriptionByStickerID", stickerIDParameter, problemDescriptionParameter);
        }
    
        public virtual int UpdateTermsOfferedByClassID(Nullable<int> classID, Nullable<byte> termOffered)
        {
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            var termOfferedParameter = termOffered.HasValue ?
                new ObjectParameter("TermOffered", termOffered) :
                new ObjectParameter("TermOffered", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTermsOfferedByClassID", classIDParameter, termOfferedParameter);
        }
    
        public virtual int UpdateTimeoutByStickerIDAndSeconds(Nullable<int> stickerID, Nullable<int> seconds)
        {
            var stickerIDParameter = stickerID.HasValue ?
                new ObjectParameter("StickerID", stickerID) :
                new ObjectParameter("StickerID", typeof(int));
    
            var secondsParameter = seconds.HasValue ?
                new ObjectParameter("Seconds", seconds) :
                new ObjectParameter("Seconds", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTimeoutByStickerIDAndSeconds", stickerIDParameter, secondsParameter);
        }
    
        public virtual int UpdateTutorIDByTutorIDAndStickerID(Nullable<int> tutorID, Nullable<int> stickerID)
        {
            var tutorIDParameter = tutorID.HasValue ?
                new ObjectParameter("TutorID", tutorID) :
                new ObjectParameter("TutorID", typeof(int));
    
            var stickerIDParameter = stickerID.HasValue ?
                new ObjectParameter("StickerID", stickerID) :
                new ObjectParameter("StickerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTutorIDByTutorIDAndStickerID", tutorIDParameter, stickerIDParameter);
        }
    
        public virtual int UpdateUserPasswordByUserID(Nullable<int> userID, string userPassword)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserPasswordByUserID", userIDParameter, userPasswordParameter);
        }
    
        public virtual ObjectResult<ViewAllClasses_Result> ViewAllClasses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewAllClasses_Result>("ViewAllClasses");
        }
    
        public virtual ObjectResult<ViewAllUsers_Result> ViewAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewAllUsers_Result>("ViewAllUsers");
        }
    }
}
